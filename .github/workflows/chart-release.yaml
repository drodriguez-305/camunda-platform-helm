name: "Chart - Release"

on:
  # Allow to run the workflow from GitHub UI and other workflows.
  workflow_dispatch:
    inputs:
      trigger:
        description: 'Trigger release manually'
        required: false
        default: false
        type: boolean
  pull_request:
    types:
      - labeled
  push:
    branches:
      - remove_dev_notes

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  wait-for-release-conditions:
    # if: ${{ contains(github.event.*.labels.*.name, 'release') || github.event.inputs.trigger }}
    runs-on: ubuntu-latest
    steps:
      - name: Wait for all PR checks to succeed
        uses: lewagon/wait-on-check-action@v1.3.1
        with:
          ref: ${{ github.ref }}
          running-workflow-name: 'wait-for-release-conditions'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 10

  release:
    needs: wait-for-release-conditions
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        with:
          fetch-depth: 0
      - name: Set up script permissions
        run: chmod +x ./scripts/remove_notes_todo_script.sh
        working-directory: charts/camunda-platform

      - name: Run Cleanup Script
        run: ../scripts/remove_notes_todo_script.sh
        working-directory: charts/camunda-platform

      - name: Upload Log File as Artifact
        uses: actions/upload-artifact@v3
        with:
          name: development_notes_cleanup.log
          path: charts/camunda-platform/development_notes_cleanup_*.log
      - name: Install env dependencies
        uses: asdf-vm/actions/install@v3
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
      - name: Add Helm repos
        run: |
          make helm.repos-add
      - name: Update Helm dependency
        run: |
          make helm.dependency-update
      - name: cosign-installer
        uses: sigstore/cosign-installer@v3.2.0
      - name: Run Chart Releaser
        uses: helm/chart-releaser-action@v1.6.0
        with:
          config: .github/config/chart-releaser.yaml
          install_only: true
        env:
          CR_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
          CR_SKIP_EXISTING: 'true'
      - name: Signing 
        run: |
          cd charts/camunda-platform
          cr package .
          CHART_VERSION="$(yq ".version" Chart.yaml)"
          cosign sign-blob -y .cr-release-packages/camunda-platform-${CHART_VERSION}.tgz \
            --bundle camunda-platform-${CHART_VERSION}-cosign.bundle
          find . -name "*.bundle" -exec ls -lsa {} \;
          cosign verify-blob .cr-release-packages/camunda-platform-${CHART_VERSION}.tgz \
            --bundle ./camunda-platform-${CHART_VERSION}-cosign.bundle \
            --certificate-identity "https://github.com/drodriguez-305/camunda-platform-helm/.github/workflows/chart-release.yaml@refs/heads/cosign-github-actions" \
            --certificate-oidc-issuer "https://token.actions.githubusercontent.com"
          cr upload  --owner "$GITHUB_ACTOR" \
          --token ${{ secrets.GITHUB_TOKEN }} \
          --git-repo camunda-platform-helm \
          --pages-branch gh-pages \
          --push \
          --skip-existing \

          gh release -R drodriguez-305/camunda-platform-helm upload "camunda-platform-${CHART_VERSION}" ./camunda-platform-${CHART_VERSION}-cosign.bundle 
        env:
          GH_TOKEN: '${{ secrets.GITHUB_TOKEN }}'  

  verify:
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        with:
          # The verify step happens in the "release" branch before merging to the "main" branch.
          ref: release
          fetch-depth: 0
      # NOTE: This simple test is under review. So it could fail (it should be fixed in that case).
      - name: Simple smoke test
        uses: nick-fields/retry@v2
        with:
          max_attempts: 3
          timeout_minutes: 5
          retry_wait_seconds: 10
          command: make release.verify-components-version